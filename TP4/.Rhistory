}
knitr::opts_chunk$set(echo = TRUE)
x = load("Pokemon.csv")
x = load("Pokemon.csv")
x = load("Pokemon.csv", sep = ",")
x = read.csv("Pokemon.csv", sep = ",")
head(x)
x = read.csv("Pokemon.csv", sep = ",")
head(x)
x = x[, -1]
x = x[, -1]
head(x)
x = x[, -1]
x = x[, -13]
head(x)
x = x[, -1]
x = x[, -12]
head(x)
x = x[, -1]
x = x[, -13]
head(x)
x = x[, -1]
x = x[x$Legendary != TRUE,]
head(x)
x = read.csv("Pokemon.csv", sep = ",")
head(x)
x = x[, -1]
x = x[x$Legendary != TRUE,]
head(x)
x = x[, -1]
x = x[x$Legendary != TRUE| grepl("Mega", donnees$Name)),]
x = x[, -1]
x = x[x$Legendary != TRUE| grepl("Mega", x$Name)),]
x = x[, -1]
x = x[x$Legendary != TRUE| grepl("Mega", x$Name),]
head(x)
x = x[, -1]
x = x[x$Legendary != TRUE| !grepl("Mega", x$Name),]
head(x)
x = read.csv("Pokemon.csv", sep = ",")
head(x)
x = x[, -1]
x = x[x$Legendary != TRUE| !grepl("Mega", x$Name),]
head(x)
x = x[, -1]
x = x[x$Legendary != TRUE,]
x = x[!grepl("Mega", x$Name), ]
head(x)
x = read.csv("Pokemon.csv", sep = ",")
head(x)
x = x[, -1]
x = x[x$Legendary != TRUE,]
x = x[!grepl("Mega", x$Name), ]
head(x)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
x = read.csv("Pokemon.csv", sep = ",")
head(x)
x = x[, -1]
x = x[x$Legendary != TRUE,]
x = x[!grepl("Mega", x$Name), ]
head(x)
View(x)
x = x[, -1]
x = x[x$Legendary != TRUE,]
x = x[!grepl("Mega", x$Name), ]
head(x)
View(x)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
x = read.csv("Pokemon.csv", sep = ",")
head(x)
x = x[, -1]
x = x[x$Legendary != TRUE,]
x = x[!grepl("Mega", x$Name), ]
head(x)
x
tail(x)
View(x)
View(x)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
x <- read.csv("Pokemon.csv", sep = ",")
head(x)
x <- x[, -1]
x <- x[x$Legendary != TRUE,]
donnees <- x[!grepl("Mega", x$Name), ]
head(donnees)
View(donnees)
nb_legendary_true_original <- sum(donnees$Legendary == TRUE)
nb_legendary_true_original
donnees$Type.1[donnees$Generation == 8] <- "NA"
donnees$Type.2[donnees$Generation == 8] <- "NA"
donnees_generation_8 <- donnees[donnees$Generation == 8, ]
donnees_generation_8
View(donnees_generation_8)
tail(donnes)
tail(donnees)
View(x)
View(donnees)
donnees$Type.1[donnees$Generation == 6] <- "NA"
donnees$Type.2[donnees$Generation == 6] <- "NA"
View(donnees)
View(donnees)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
training_data$y = y
library(rpart)
library(rpart.plot)
set.seed(2001) # random s e e d
n = 200
maxDigit = 2
y = rep(0 : maxDigit, length = n)
pattern = c (1 ,1 ,1 ,0 ,1 ,1 ,1 ,
0 ,0 ,1 ,0 ,0 ,1 ,0 ,
1 ,0 ,1 ,1 ,1 ,0 ,1 ,
1 ,0 ,1 ,1 ,0 ,1 ,1 ,
0 ,1 ,1 ,1 ,0 ,1 ,0 ,
1 ,1 ,0 ,1 ,0 ,1 ,1 ,
0 ,1 ,0 ,1 ,1 ,1 ,1 ,
1 ,0 ,1 ,0 ,0 ,1 ,0 ,
1 ,1 ,1 ,1 ,1 ,1 ,1 ,
1 ,1 ,1 ,1 ,0 ,1 ,0)
lights = matrix(pattern, 10, 7, byrow = TRUE)
lights = lights[1 : (maxDigit + 1),]
noisy_lights = matrix(rbinom(n*7, 1, 0.8), n, 7)
noisy_lights = ifelse(lights[y+1, ] == 1, noisy_lights, 1-noisy_lights)
random_lights = matrix(rbinom(n*17, 1, 0.5), n, 17)
x = cbind(noisy_lights, random_lights)
training_data = as.data.frame(x)
training_data$y = y
pattern = c (1 ,1 ,1 ,0 ,1 ,1 ,1 , #0
0 ,0 ,1 ,0 ,0 ,1 ,0 , # 1
1 ,0 ,1 ,1 ,1 ,0 ,1 , #2
1 ,0 ,1 ,1 ,0 ,1 ,1 , #3
0 ,1 ,1 ,1 ,0 ,1 ,0 , #4
1 ,1 ,0 ,1 ,0 ,1 ,1 , #5
0 ,1 ,0 ,1 ,1 ,1 ,1 , #6
1 ,0 ,1 ,0 ,0 ,1 ,0 , #7
1 ,1 ,1 ,1 ,1 ,1 ,1 , #8
1 ,1 ,1 ,1 ,0 ,1 ,0)  #9
library(rpart)
library(rpart.plot)
set.seed(2001) # random s e e d
n = 200
maxDigit = 2
y = rep(0 : maxDigit, length = n)
pattern = c (1 ,1 ,1 ,0 ,1 ,1 ,1 , #0
0 ,0 ,1 ,0 ,0 ,1 ,0 , # 1
1 ,0 ,1 ,1 ,1 ,0 ,1 , #2
1 ,0 ,1 ,1 ,0 ,1 ,1 , #3
0 ,1 ,1 ,1 ,0 ,1 ,0 , #4
1 ,1 ,0 ,1 ,0 ,1 ,1 , #5
0 ,1 ,0 ,1 ,1 ,1 ,1 , #6
1 ,0 ,1 ,0 ,0 ,1 ,0 , #7
1 ,1 ,1 ,1 ,1 ,1 ,1 , #8
1 ,1 ,1 ,1 ,0 ,1 ,0)  #9
lights = matrix(pattern, 10, 7, byrow = TRUE)
lights = lights[1 : (maxDigit + 1),]
noisy_lights = matrix(rbinom(n*7, 1, 0.8), n, 7)
noisy_lights = ifelse(lights[y+1, ] == 1, noisy_lights, 1-noisy_lights)
random_lights = matrix(rbinom(n*17, 1, 0.5), n, 17)
x = cbind(noisy_lights, random_lights)
training_data = as.data.frame(x)
training_data$y = y
rpart.plot(treeFitted, type = 3)
treeFitted = rpart(y~ ., data = training_data, method = "class", parms = list(split = "gini"))
treeFitted = rpart(y~ ., data = training_data, method = "class", parms = list(split = "gini"))
```{r}
rpart.plot(treeFitted, type = 3)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
data = load(Xts.Rdata)
setwd("~/Bureau/Polytech/MAM4/Informatique/SériesTemporelles/TP4")
data = load(Xts.Rdata)
data = load("Xts.Rdata")
plot(decompose(Xts))
plot(Xts)
plot(Xts)
plot(decompose(Xts))
```{r}
k = 12
MX <- Xts  # Crée une copie de Xts
for (i in 13:length(Xts)) {
MX[i] <- mean(Xts[(i-11):i])
}
MX <- ts(MX, start = start(Xts), frequency = frequency(Xts))
# Visualisation de la série moyenne mobile
plot(MX)
k = 12
k = 12
MX = Xts
help("mean")
k = 12
# Calcul de la moyenne mobile d'ordre k
MX <- numeric(length(Xts))  # Crée un vecteur pour stocker les valeurs de la moyenne mobile
for (n in (k:length(Xts))) {
MX[n] <- sum(Xts[(n - (k - 1)):n]) / k
}
# Conversion en objet time series si ce n'est pas déjà fait
MX <- ts(MX, start = start(Xts), frequency = frequency(Xts))
# Visualisation de la série moyenne mobile
plot(MX)
k = 12
k = 12
# Calcul de la moyenne mobile d'ordre k
MX <- numeric(length(Xts))  # Crée un vecteur pour stocker les valeurs de la moyenne mobile
for (n in (k:length(Xts))) {
MX[n] <- sum(Xts[(n - (k - 1)):n]) / k
}
# Conversion en objet time series si ce n'est pas déjà fait
MX <- ts(MX, start = start(Xts), frequency = frequency(Xts))
# Visualisation de la série moyenne mobile
plot(MX)
k = 12
MX <- ts(MX, start = start(Xts))
k = 12
MX = c()
for (n in (k:length(Xts))) {
MX[n] <- sum(Xts[(n - (k - 1)):n]) / k
}
MX <- ts(MX, start = start(Xts))
MX[n] <- sum(Xts[n-j])
# Calcul de la moyenne mobile d'ordre k
MX <- numeric(length(Xts))  # Crée un vecteur pour stocker les valeurs de la moyenne mobile
for (n in (k:length(Xts))) {
MX[n] <- sum(Xts[(n - (k - 1)):n]) / k
}
# Conversion en objet time series si ce n'est pas déjà fait
MX <- ts(MX, start = start(Xts), frequency = frequency(Xts))
# Visualisation de la série moyenne mobile
plot(MX)
# Calcul de la moyenne mobile d'ordre 12
MX <- filter(Xts, rep(1/12, 12), sides = 1)
# Conversion en objet time series si ce n'est pas déjà fait
MX <- ts(MX, start = start(Xts), frequency = frequency(Xts))
# Visualisation de la série moyenne mobile
plot(MX)
MXs = Xts - MX
plot(MXs)
MXs = Xts - MX
# Calcul de la moyenne mobile d'ordre 12
MX <- filter(Xts, rep(1/12, 12), sides = 1)
# Conversion en objet time series si ce n'est pas déjà fait
MX <- ts(MX, start = start(Xts), frequency = frequency(Xts))
# Visualisation de la série moyenne mobile
plot(MX)
k = 12
x = c()
for (i in k:length(X)) {
x = c(x, 1/k*sum(X[(i-(k-1)):i]))
}
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(X[(i-(k-1)):i]))
}
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(Xts[(i-(k-1)):i]))
}
MX = ts(x, start = c(2001, 1), frequency = 12)
plot(MX)
MXs = Xts - MX
plot(MXs)
MXs = Xts - MX
plot(MXs)
plot(decompose(MXs))
MXs = Xts - MX
plot(decompose(MXs))
plot(decompose(MXs)[2])
plot(decompose(MXs)$tred)
plot(decompose(MXs)$trend)
plot(decompose(MXs))
plot(decompose(MXs)$seasonal)
plot(decompose(MXs))
plot(decompose(MXs))
x = decompose(MXs)$seasonal
plot(decompose(MXs))
composante_periodique = decompose(MXs)$seasonal
Xtrend = Xts - composante_periodique
Xtrend = Xts - composante_periodique
plot(Xtrend)
MXs = Xts - MX
plot(MXs)
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
plot(decompose(Xtrend))
view(decompose())
#On définit x et y
x = MXs
y = log(x)
# On définit la longueur des données
n = length(y)
# On crée un vecteur pour le temps de 1 à n
t = 1:n
# On crée 12 variables s pour les saisonnalités
for(i in 1:12){
# On crée 12 vecteurs vides
su = rep(0, times=12)
# On ajoute 1 en ième position du vecteur s_i
su[i] = 1
s = rep(su,times=12)
# On crée les variables appellées s1, s2, etc...
assign(paste('s', i ,sep=""), s)
}
# On fait la régression linéaire mutliples entre toute les variables précédemment définies (-1 mettre l'or)
reg = lm(y~t + s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12-1)
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
rm(list=ls())
data = load("Xts.Rdata")
plot(Xts)
plot(decompose(Xts))
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(Xts[(i-(k-1)):i]))
}
MX = ts(x, start = c(2001, 1), frequency = 12)
plot(MX)
MXs = Xts - MX
MXs = Xts - MX
plot(decompose(MXs))
composante_periodique = decompose(MXs)$seasonal
Xtrend = Xts - composante_periodique
plot(Xtrend)
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
plot(decompose(MXtrend))
plot(decompose(MXtrend)$trend)
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend$seasonal)
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend$trend)
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
k = 12
x = c()
for (i in k:length(Xtrend)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
#On définit x et y
x = Xts
# On définit la longueur des données
n = length(x)
# On crée un vecteur pour le temps de 1 à n
t = 1:n
# On crée 12 variables s pour les saisonnalités
for(i in 1:12){
# On crée 12 vecteurs vides
su = rep(0, times=12)
# On ajoute 1 en ième position du vecteur s_i
su[i] = 1
s = rep(su,times=12)
# On crée les variables appellées s1, s2, etc...
assign(paste('s', i ,sep=""), s)
}
# On fait la régression linéaire mutliples entre toute les variables précédemment définies (-1 mettre l'or)
reg = lm(y~t + s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12-1)
rm(list=ls())
data = load("Xts.Rdata")
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(Xts[(i-(k-1)):i]))
}
MX = ts(x, start = c(2001, 1), frequency = 12)
plot(MX)
MXs = Xts - MX
plot(decompose(MXs))
composante_periodique = decompose(MXs)$seasonal
Xtrend = Xts - composante_periodique
plot(Xtrend)
k = 12
x = c()
for (i in k:length(Xtrend)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
plot(decompose(MXtrend)$trend)
k = 12
x = c()
for (i in k:length(Xtrend)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
linex(MX)
k = 12
x = c()
for (i in k:length(Xtrend)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
lines(MX)
k = 12
x = c()
for (i in k:length(Xtrend)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
k = 12
x = c()
for (i in k:length(Xtrend)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, frequency = 12)
plot(MXtrend)
k = 12
x = c()
for (i in k:length(Xtrend)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
plot(MXtrend)
lines(decompose(MXtrend)$trend)
plot(MXtrend)
lines(decompose(MXtrend)$trend, col = "red", lwd = 2)
plot(decompose(MXs))
composante_periodique = decompose(MXs)$seasonal
n = length(MXs)
t = 1:n
for (i in 1:12){
su = rep(0,times=12)
su[i] = 1
s = rep(su,times=9)
assign(paste('s',i,sep=""),s)
}
s1 = s1[1:(length(s1)-8)]
s2 = s2[1:(length(s2)-8)]
s3 = s3[1:(length(s3)-8)]
s4 = s4[1:(length(s4)-8)]
s5 = s5[1:(length(s5)-8)]
s6 = s6[1:(length(s6)-8)]
s7 = s7[1:(length(s7)-8)]
s8 = s8[1:(length(s8)-8)]
s9 = s9[1:(length(s9)-8)]
s10 = s10[1:(length(s10)-8)]
s11 = s11[1:(length(s11)-8)]
s12 = s12[1:(length(s12)-8)]
reg = lm(MXs~t+s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12-1)
plot(decompose(MXs))
composante_periodique = decompose(MXs)$seasonal
rm(list=ls())
data = load("Xts.Rdata")
data = load("Xts.Rdata")
## Question 2
```{r}
plot(Xts)
plot(decompose(Xts))
plot(Xts)
plot(decompose(Xts))
k = 12
x = c()
for (i in k:length(Xts)) {
x = c(x, 1/k*sum(Xts[(i-(k-1)):i]))
}
MX = ts(x, start = c(2001, 1), frequency = 12)
plot(MX)
MXs = Xts - MX
plot(decompose(MXs))
composante_periodique = decompose(MXs)$seasonal
Xtrend = Xts - composante_periodique
plot(Xtrend)
k = 12
x = c()
for (i in k:length(Xtrend)) {
x = c(x, 1/k*sum(Xtrend[(i-(k-1)):i]))
}
MXtrend = ts(x, start = c(2001, 1), frequency = 12)
plot(MXtrend)
plot(MXtrend)
lines(decompose(MXtrend)$trend, col = "red", lwd = 2)
