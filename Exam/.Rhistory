plot(kwh)
kwh
load("Kwh.R")
kwh = kwh[1:180]
#kwh = ts(kwh,start = 1970, end = 1983)
plot(kwh)
load("Kwh.R")
kwh = kwh[1:180]
#kwh = ts(kwh,start = 1970, end = 1983)
plot(kwh, type = "l")
load("Kwh.R")
X = kwh[1:180]
#kwh = ts(kwh,start = 1970, end = 1983)
plot(kwh, type = "l")
kwh
load("Kwh.R")
X = kwh[1:168]
#kwh = ts(kwh,start = 1970, end = 1983)
plot(kwh, type = "l")
load("Kwh.R")
X = kwh[1:168]
kwh = ts(X)
plot(kwh, type = "l")
load("Kwh.R")
X = kwh[1:168]
#kwh = ts(X, start = 19)
plot(kwh, type = "l")
load("Kwh.R")
X = kwh[1:168]
kwh = ts(X, start = 1970, end = 1983)
plot(kwh, type = "l")
kwh
load("Kwh.R")
X = kwh[1:168]
#kwh = ts(X, start = 1970, end = 1983)
plot(kwh, type = "l")
load("Kwh.R")
X = kwh[1:168]
kwh = ts(X)
plot(kwh, type = "l")
alpha = 0.8
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(x[1:i]*alpha^(seq(i-1,0,-1))))
}
alpha = 0.8
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
xhr=c((1-alpha)*kwh[1])
for (i in 2:n){
new=(1-alpha)*kwh[i]+alpha*xhr[i-1]
xhr=c(xhr,new)
}
alpha = 0.8
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
rm(list=ls())
load("Kwh.R")
X = kwh[1:168]
kwh = ts(X)
plot(kwh, type = "l")
load("Kwh.R")
X = kwh[1:168]
kwh = ts(X)
plot(kwh, type = "l", main = "Kwh en fonction du temps jusqu'en 1983")
alpha = 0.8
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
alpha = 0.8
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
plot(kwh)
lines(xh)
alpha = 0.8
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
plot(kwh)
lines(xh, col = "red", lty = 2)
alpha = 0.8
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
plot(kwh)
lines(xh, col = "red", lwd = 2)
# Il nous est demandé de calculer les 40 premiers coefficients d'auto-correlation.
k = 40
# n correspond au nombre d'éléments de la série temporelle
n = length(kwh)
# On calcule \overline{x}
x_barre = mean(kwh)
# On calcule \hat{\sigma}_n(0)
sigma_n_0_chapeau = 1/n * sum((kwh - x_barre)^2)
# On calcule \hat{\sigma}_n(k)
sigma_n_k_chapeau = c()
for(i in 1:n-k){
sigma_n_k_chapeau[i] = (kwh[i] - x_barre)*(kwh[i+1]-x_barre)
}
sigma_n_k_chapeau = sigma_n_k_chapeau/n
#Calcul de \rho_n(k)
rho_n_k = c()
rho_n_k = sigma_n_k_chapeau/sigma_n_0_chapeau
h=1:40
plot(h, rho_n_k[1:40])
for(i in 1:40){
abline(v = rho_n_k[i])
}
#hist(rho_n_k)
# Il nous est demandé de calculer les 40 premiers coefficients d'auto-correlation.
k = 40
# n correspond au nombre d'éléments de la série temporelle
n = length(kwh)
# On calcule \overline{x}
x_barre = mean(kwh)
# On calcule \hat{\sigma}_n(0)
sigma_n_0_chapeau = 1/n * sum((kwh - x_barre)^2)
# On calcule \hat{\sigma}_n(k)
sigma_n_k_chapeau = c()
for(i in 1:n-k){
sigma_n_k_chapeau[i] = (kwh[i] - x_barre)*(kwh[i+1]-x_barre)
}
sigma_n_k_chapeau = sigma_n_k_chapeau/n
#Calcul de \rho_n(k)
rho_n_k = c()
rho_n_k = sigma_n_k_chapeau/sigma_n_0_chapeau
h=1:40
plot(h, rho_n_k[1:40])
for(i in 1:40){
abline(i, v = rho_n_k[i])
}
# Il nous est demandé de calculer les 40 premiers coefficients d'auto-correlation.
k = 40
# n correspond au nombre d'éléments de la série temporelle
n = length(kwh)
# On calcule \overline{x}
x_barre = mean(kwh)
# On calcule \hat{\sigma}_n(0)
sigma_n_0_chapeau = 1/n * sum((kwh - x_barre)^2)
# On calcule \hat{\sigma}_n(k)
sigma_n_k_chapeau = c()
for(i in 1:n-k){
sigma_n_k_chapeau[i] = (kwh[i] - x_barre)*(kwh[i+1]-x_barre)
}
sigma_n_k_chapeau = sigma_n_k_chapeau/n
#Calcul de \rho_n(k)
rho_n_k = c()
rho_n_k = sigma_n_k_chapeau/sigma_n_0_chapeau
h=1:40
#plot(h, rho_n_k[1:40])
#for(i in 1:40){
# abline(v = rho_n_k[i])
#}
#hist(rho_n_k)
alpha = 0.9
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
plot(kwh)
lines(xh, col = "red", lwd = 2)
L1 = c()
L1[1] = (1-alpha)
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(xnh)
L1 = c()
L1[1] = (1-alpha)
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(h = xnh)
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(h = xnh)
rm(list=ls())
load("Kwh.R")
X = kwh[1:168]
kwh = ts(X)
plot(kwh, type = "l", main = "Kwh en fonction du temps jusqu'en 1983")
alpha = 0.9
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
plot(kwh)
lines(xh, col = "red", lwd = 2)
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:168)
plot(kwh)
abline(h = xnh)
rm(list=ls())
# On charge le fichier kwh.R
X = load("Kwh.R")
# Représentation de kwh avec la commande plot
plot(kwh, main = "Kwh en fonction des années", xlab = "Temps en années", ylab = "Kwh")
# Il nous est demandé de calculer les 40 premiers coefficients d'auto-correlation.
k = 40
# n correspond au nombre d'éléments de la série temporelle
n = length(kwh)
# On calcule \overline{x}
x_barre = mean(kwh)
# On calcule \hat{\sigma}_n(0)
sigma_n_0_chapeau = 1/n * sum((kwh - x_barre)^2)
# On calcule \hat{\sigma}_n(k)
sigma_n_k_chapeau = c()
for(i in 1:n-k){
sigma_n_k_chapeau[i] = (kwh[i] - x_barre)*(kwh[i+1]-x_barre)
}
sigma_n_k_chapeau = sigma_n_k_chapeau/n
#Calcul de \rho_n(k)
rho_n_k = c()
rho_n_k = sigma_n_k_chapeau/sigma_n_0_chapeau
h=1:40
#plot(h, rho_n_k[1:40])
#for(i in 1:40){
# abline(v = rho_n_k[i])
#}
#hist(rho_n_k)
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
alpha = 0.9
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
plot(kwh)
lines(xh, col = "red", lwd = 2)
load("Kwh.R")
X = kwh[1:168]
kwh = ts(X)
plot(kwh, type = "l", main = "Kwh en fonction du temps jusqu'en 1983")
alpha = 0.9
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
plot(kwh)
lines(xh, col = "red", lwd = 2)
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(h = xnh)
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(v = xnh)
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(h = xnh)
h=168
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(h = xnh)
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(h = xnh)
h=40
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(h = xnh)
h=1:40
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(h = xnh)
h=1:168
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(h = xnh)
rm(list=ls())
# On charge le fichier kwh.R
X = load("Kwh.R")
# Représentation de kwh avec la commande plot
plot(kwh, main = "Kwh en fonction des années", xlab = "Temps en années", ylab = "Kwh")
# Il nous est demandé de calculer les 40 premiers coefficients d'auto-correlation.
k = 40
# n correspond au nombre d'éléments de la série temporelle
n = length(kwh)
# On calcule \overline{x}
x_barre = mean(kwh)
# On calcule \hat{\sigma}_n(0)
sigma_n_0_chapeau = 1/n * sum((kwh - x_barre)^2)
# On calcule \hat{\sigma}_n(k)
sigma_n_k_chapeau = c()
for(i in 1:n-k){
sigma_n_k_chapeau[i] = (kwh[i] - x_barre)*(kwh[i+1]-x_barre)
}
sigma_n_k_chapeau = sigma_n_k_chapeau/n
#Calcul de \rho_n(k)
rho_n_k = c()
rho_n_k = sigma_n_k_chapeau/sigma_n_0_chapeau
h=1:40
#plot(h, rho_n_k[1:40])
#for(i in 1:40){
# abline(v = rho_n_k[i])
#}
#hist(rho_n_k)
# On trace le lag-plot de la série temporelle en précisan l'horizon : de 1 à 14
lag.plot(kwh, set.lags = 1:14)
lag.plot(kwh, set.lags = 1:24)
# On récupère les temps
t = 1:length(kwh)
# On fait la régression linéaire avec lm entre le temps et les kwh
reg = lm(kwh ~ t, data = kwh)
# On récupère les coefficients beta0 et beta1
beta0 = coef(reg)[1]
beta1 = coef(reg)[2]
# On fait un tracé de kwh en fonction du temps
plot(t, kwh, type = "l", main = "Droite de régression linéaire pour kwh")
# Puis on ajoute la droite de régression avec les coefficients beta0 et beta1 récupéres
lines(beta0 + beta1*t, col = "red", lwd = 2)
legend("topright", legend = "Droite de régression", col = "red", lwd = 2)
X = kwh
logx = log(X)
n = length(logx)
t = 1:n
for(i in 1:15){
# On crée 12 vecteurs vides
su = rep(0, times=12)
# On ajoute 1 en ième position du vecteur s_i
su[i] = 1
s = rep(su,times=15)
# On crée les variables appellées s1, s2, etc...
assign(paste('s', i ,sep=""), s)
}
reg = lm(logx~t + s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12-1)
a = coef(reg)[2:13]
b = coef(reg)[1]
c = a - mean(a)
y_corrige = logx - c
plot(logx, type = "l", col = "blue", xlab = "Temps en années", ylab = "Transformée logarithmique", main = "Série temporelle et Version corrigée")
lines(y_corrige, col = "green", lwd = 2)
legend("topright", legend = c("Série temporelle", "Version corrigée"), col = c("blue", "green"), lwd = 2:2)
tendance = exp(coef(reg)[1]*t + mean(a))
plot(t, tendance, lwd = 2, type = "l", main = "Tendance en fonction du temps")
# On retranche la tendance à la série temporelle kwh et on en fait une représentation graphique
X = kwh - tendance
plot(X)
plot(decompose(kwh))
rm(list=ls())
load("Kwh.R")
X = kwh[1:168]
kwh = ts(X)
plot(kwh, type = "l", main = "Kwh en fonction du temps jusqu'en 1983")
alpha = 0.9
n = length(kwh)
xh=c()
for (i in 1:n){
xh=c(xh,(1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
plot(kwh)
lines(xh, col = "red", lwd = 2)
h = 1:168
L1 = c()
for(i in 1:n){
L1 = c(L1, (1-alpha)*sum(kwh[1:i]*alpha^(seq(i-1,0,-1))))
}
L2 = c()
for(i in 1:n){
L2 = c(L2, (1-alpha)*sum(L1[1:i]*alpha^(seq(i-1,0,-1))))
}
a1 = 2*L1 - L2
a2 = ((1-alpha)/alpha)*(L1-L2)
xnh = a1[n] + a2[n]*(1:h)
plot(kwh)
abline(h = xnh)
