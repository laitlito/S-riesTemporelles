View(ozone)
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = FALSE)
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = FALSE)
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE)
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE)
View(ozone)
View(ozone)
ozone1 = ozone[max03,T12]
ozone1 = ozone[name = max03,name = T12]
ozone1 = ozone[, c("max03", "T12")]
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE)
ozone1 = ozone$max03
ozone1 = ozone$maxO3
ozone2 = ozone$T12
ozone = c(ozone1, ozone2)
Y = ozone$T12
X = ozone$maxO3
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE)
X = ozone$maxO3
Y = ozone$T12
rm(list=ls())
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE)
X = ozone$maxO3
Y = ozone$T12
X_bar = mean(X)
Y_bar = mean(Y)
Y_bar = mean(Y)
Y = as.numeric(ozone$T12)
Y_bar = mean(as.numeric(Y)
Y_bar = mean(as.numeric(Y))
Y = lapply(data, Y)
Y = lapply(data, Y)
Y = as.data.frame(lapply(data, Y))
Y = as.data.frame(lapply(data, Y))
Y = ozone$T12
Y = as.numeric(as.character(ozone$T12))
X = ozone$maxO3
Y = as.numeric(as.character(ozone$T12))
X_bar = mean(X)
Y_bar = mean(Y)
View(ozone)
X_bar = mean(X)
Y_bar = mean(Y)
```
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE)
X = ozone$maxO3
Y = ozone$T12
X_bar = mean(X)
Y_bar = mean(Y)
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE, dec = ",")
X = ozone$maxO3
Y = ozone$T12
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1 <- sum((data$X - X_bar) * (data$Y - Y_bar)) / sum((data$X - X_bar)^2)
#Calcul de beta1 et beta0
beta1 <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0 <- Y_bar - beta1 * X_bar
cat("Ordonnée à l'origine : ", beta0)
cat("Pente : ", beta1)
plot(x)
plot(X)
y = beta0 + beta1*X
lines(x, y)
plot(X)
y = beta0 + beta1*X
cat("Ordonnée à l'origine : ", beta0)
y = beta0 + beta1*X
x = seq(0,110, 0.01)
plot(X)
lines(x, y)
X = ozone$maxO3
Y = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1 <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0 <- Y_bar - beta1 * X_bar
cat("Pente : ", beta1)
cat("Ordonnée à l'origine : ", beta0)
y = beta0 + beta1*X
x = seq(0,110, 0.01)
plot(X)
lines(x, y)
plot(X, Y)
abline(y)
X = ozone$maxO3
Y = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1 <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0 <- Y_bar - beta1 * X_bar
cat("Pente : ", beta1)
cat("Ordonnée à l'origine : ", beta0)
y = beta0 + beta1*X
x = seq(0,110, 0.01)
plot(X, Y)
abline(y)
lines(X, y, col = 'red')
rm(list=ls())
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE, dec = ",")
X = ozone$maxO3
Y = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1 <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0 <- Y_bar - beta1 * X_bar
cat("Pente : ", beta1)
cat("Ordonnée à l'origine : ", beta0)
y = beta0 + beta1*X
x = seq(0,110, 0.01)
plot(X, Y)
lines(X, y, col = 'red')
X = ozone$maxO3
Y = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1 <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0 <- Y_bar - beta1 * X_bar
y = beta0 + beta1*X
x = seq(0,110, 0.01)
plot(X, Y)
lines(X, y, col = 'red')
y = lm(Y ~ X, data = ozone)
View(y)
y = lm(Y ~ X)
y = lm(Y ~ X)
rm(list=ls())
y = lm(Y ~ X)
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE, dec = ",")
X = ozone$maxO3
Y = ozone$T12
y = lm(Y ~ X)
# Tracer la droite de régression avec la fonction lines
lines(ozone$X, predictions, col = "red")
y = lm(Y ~ X)
# Afficher le nuage de points
plot(ozone$X, ozone$T12, main = "Nuage de points avec droite de régression", xlab = "X", ylab = "T12")
y = lm(Y ~ X)
# Afficher le nuage de points
plot(ozone$X, ozone$T12, main = "Nuage de points avec droite de régression", xlab = "X", ylab = "T12")
y = lm(Y ~ X)
# Afficher le nuage de points
plot(X, T12, main = "Nuage de points avec droite de régression", xlab = "X", ylab = "T12")
y = lm(Y ~ X)
# Afficher le nuage de points
plot(X, Y, main = "Nuage de points avec droite de régression", xlab = "X", ylab = "T12")
# Tracer la droite de régression avec la fonction lines
lines(X, y, col = "red")
y = lm(Y ~ X)
plot(X, Y)
lines(X, y, col = "red")
help(lm)
View(y)
ozone = c(X,Y)
y = lm(Y ~ X, data = ozone)
ozone = c(X,Y)
y = lm(Y ~ X, data = ozone)
ozone = [c(X,Y)]
y = lm(Y ~ X, data = ozone)
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE, dec = ",")
y = lm(Y ~ X, data = ozone)
View(y)
beta0 = predictrion[1]
prediction = lm(Y ~ X, data = ozone)
beta0 = predictrion[1]
beta0 = coeff(predictrion)[1]
beta0 = coef(predictrion)[1]
beta0 = coef(prediction)[1]
beta1 = coef(prediction)[2]
X = ozone$maxO3
Y = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1 <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0 <- Y_bar - beta1 * X_bar
y = beta0 + beta1*X
x = seq(0,110, 0.01)
plot(X, Y)
lines(X, y, col = 'red')
prediction = lm(Y ~ X, data = ozone)
beta0 = coef(prediction)[1]
beta1 = coef(prediction)[2]
y_avec_lm = beta0 + beta1*X
plot(X, Y)
lines(X, y, col = "red")
X = ozone$maxO3
Y = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1_manuel <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0_manuel <- Y_bar - beta1 * X_bar
y = beta0 + beta1*X
x = seq(0,110, 0.01)
plot(X, Y)
lines(X, y, col = 'red')
rm(list=ls())
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE, dec = ",")
X = ozone$maxO3
Y = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1_manuel <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0_manuel <- Y_bar - beta1_manueal * X_bar
X = ozone$maxO3
Y = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1_manuel <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0_manuel <- Y_bar - beta1_manuel * X_bar
y = beta0_manuel + beta1_manuel*X
x = seq(0,110, 0.01)
plot(X, Y)
lines(X, y, col = 'red')
prediction = lm(Y ~ X, data = ozone)
beta0_lm = coef(prediction)[1]
beta1_lm = coef(prediction)[2]
y_avec_lm = beta0_lm + beta1_lm*X
plot(X, Y)
lines(X, y, col = "red")
help(sum)
R2 = (sum( (X-X_bar)*(Y-Y_bar) ))/sqrt(sum(X-X_bar)^2*sum(Y-Y_bar)^2)
beta_1Barre = sum((Y-Y_bar)*(X-X_bar))/(sum(X-X_bar)^2)
beta_1barre = sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
Y = ozone$maxO3
X = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1_manuel <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0_manuel <- Y_bar - beta1_manuel * X_bar
y = beta0_manuel + beta1_manuel*X
x = seq(0,110, 0.01)
plot(X, Y)
lines(X, y, col = 'red')
prediction = lm(Y ~ X, data = ozone)
beta0_lm = coef(prediction)[1]
beta1_lm = coef(prediction)[2]
y_avec_lm = beta0_lm + beta1_lm*X
plot(X, Y)
lines(X, y, col = "red")
rm(list=ls())
rm(list=ls())
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE, dec = ",")
Y = ozone$maxO3
X = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1_manuel <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0_manuel <- Y_bar - beta1_manuel * X_bar
y = beta0_manuel + beta1_manuel*X
x = seq(0,110, 0.01)
plot(X, Y)
lines(X, y, col = 'red')
prediction = lm(Y ~ X, data = ozone)
beta0_lm = coef(prediction)[1]
beta1_lm = coef(prediction)[2]
y_avec_lm = beta0_lm + beta1_lm*X
plot(X, Y)
lines(X, y, col = "red")
beta_0barre = Y_bar - beta_1barre*X_bar
beta_1barre = sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta_0barre = Y_bar - beta_1barre*X_bar
Ychapo = beta0_barre + beta_1barre*X
beta_1barre = sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta_0barre = Y_bar - beta_1barre*X_bar
Ychapo = beta0_barre + beta_1barre*X
Ychapo = beta_0barre + beta_1barre*X
beta_1barre = sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta_0barre = Y_bar - beta_1barre*X_bar
Ychapo = beta_0barre + beta_1barre*X
moindresCarres = sum((Ychapo-Ybar)^2)
moindresCarres = sum((Ychapo-Y_bar)^2)
moindresCarres2 = sum((Y-Y_bar)^2)
R2 = moindresCarres/moindresCarres2
#Calcul des moindres carrés
moindresCarres = sum((Ychapo-Y_bar)^2)
# Calcul des estimateurs
beta_1barre = sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
#Calcul des moindres carrés
SSM = sum((Ychapo-Y_bar)^2)
SSR = sum((Y-Y_bar)^2)
#Calcul de R2
R2 = SSM/SSR
rm(list=ls())
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE, dec = ",")
Y = ozone$maxO3
X = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1_manuel <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0_manuel <- Y_bar - beta1_manuel * X_bar
y = beta0_manuel + beta1_manuel*X
x = seq(0,110, 0.01)
plot(X, Y)
lines(X, y, col = 'red')
prediction = lm(Y ~ X, data = ozone)
beta0_lm = coef(prediction)[1]
beta1_lm = coef(prediction)[2]
y_avec_lm = beta0_lm + beta1_lm*X
plot(X, Y)
lines(X, y, col = "red")
# Calcul des estimateurs
beta_1barre = sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta_0barre = Y_bar - beta_1barre*X_bar
#Calcul de \hat{Y}
Ychapo = beta_0barre + beta_1barre*X
#Calcul des moindres carrés
SSM = sum((Ychapo-Y_bar)^2)
SSR = sum((Y-Y_bar)^2)
#Calcul de R2
R2 = SSM/SSR
prediction = lm(Y~X, data = ozone)
summary.lm(prediction)
a =summary.lm(prediction)
View(a)
a =summary.lm(prediction)[8]
View(a)
a =coef(summary.lm(prediction))[8]
View(prediction)
prediction
summary.lm(prediction)
View(prediction)
View(prediction)
prediction = lm(Y~X, data = ozone)
res = summary.lm(prediction)
View(res)
coef(res)[8]
prediction = lm(Y~X, data = ozone)
res = summary.lm(prediction)
View(res)
R2 = coef(res)[8]
R2 = res$r.squared
R2 = summary.lm(prediction)$r.squared
prediction = lm(Y~X, data = ozone)
R2 = summary.lm(prediction)$r.squared
rm(list=ls())
ozone = read.table(file = "Dataset_ozone.txt", sep = ";", header = TRUE, dec = ",")
Y = ozone$maxO3
X = ozone$T12
#Calcul des moyennes empiriques
X_bar = mean(X)
Y_bar = mean(Y)
#Calcul de beta1 et beta0
beta1_manuel <- sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta0_manuel <- Y_bar - beta1_manuel * X_bar
y = beta0_manuel + beta1_manuel*X
x = seq(0,110, 0.01)
plot(X, Y)
lines(X, y, col = 'red')
prediction = lm(Y ~ X, data = ozone)
beta0_lm = coef(prediction)[1]
beta1_lm = coef(prediction)[2]
y_avec_lm = beta0_lm + beta1_lm*X
plot(X, Y)
lines(X, y, col = "red")
# Calcul des estimateurs
beta_1barre = sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta_0barre = Y_bar - beta_1barre*X_bar
#Calcul de \hat{Y}
Ychapo = beta_0barre + beta_1barre*X
#Calcul des moindres carrés
SSM = sum((Ychapo-Y_bar)^2)
SSR = sum((Y-Y_bar)^2)
#Calcul de R2
R2 = SSM/SSR
# Calcul des estimateurs
beta_1barre = sum((X - X_bar) * (Y - Y_bar)) / sum((X - X_bar)^2)
beta_0barre = Y_bar - beta_1barre*X_bar
#Calcul de \hat{Y}
Ychapo = beta_0barre + beta_1barre*X
#Calcul des moindres carrés
SSM = sum((Ychapo-Y_bar)^2)
SSR = sum((Y-Y_bar)^2)
#Calcul de R2
R2_manuel = SSM/SSR
prediction = lm(Y~X, data = ozone)
R2_lm = summary.lm(prediction)$r.squared
# Calcul des intervalles de prédiction et de confiance
intervalle_pred <- predict(prediction, interval = "prediction", level = 0.95)
intervalle_conf <- predict(prediction, interval = "confidence", level = 0.95)
# Tracer le nuage de points
plot(X, Y, main = "Nuage de points avec droite de régression et intervalles", xlab = "T12", ylab = "maxO3")
# Tracer la droite de régression
lines(X, y, col = "red")
# Tracer les intervalles de prédiction
lines(X, intervalle_pred[, "lwr"], col = "blue", lty = 2)  # Limite inférieure de l'intervalle de prédiction
lines(X, intervalle_pred[, "upr"], col = "blue", lty = 2)  # Limite supérieure de l'intervalle de prédiction
# Tracer les intervalles de confiance
lines(X, intervalle_conf[, "lwr"], col = "green", lty = 2)  # Limite inférieure de l'intervalle de confiance
lines(X, intervalle_conf[, "upr"], col = "green", lty = 2)  # Limite supérieure de l'intervalle de confiance
# Légende
legend("topright", legend = c("Droite de régression", "Intervalle de prédiction", "Intervalle de confiance"),
col = c("red", "blue", "green"), lty = c(1, 2, 2))
sigma_2 = sum((Y-beta_0 - beta_1*X)^2)/(n-2)
sigma_2 = sum((Y-beta_0manuel - beta_1manuel*X)^2)/(n-2)
sigma_2 = sum((Y-beta0_manuel - beta1_manuel*X)^2)/(n-2)
n = length(Y)
alpha = 0.05
t = qt(1-alpha/2, n-2)
sigma_2 = sum((Y-beta0_manuel - beta1_manuel*X)^2)/(n-2)
interv = t*sigma_2*sqrt(1/n + (X-X_bar)^2/sum(X-X_bar))
interv = t*sigma_2*sqrt(1/n + (X-X_bar)^2/sum(X-X_bar))
sx_2 = (var(T12))^2
sx_2 = (var(X))^2
student*sqrt(sigma_2) * sqrt(1+(1/n)+(T12-mean(T12))^2/(n*sx_2))
t*sqrt(sigma_2) * sqrt(1+(1/n)+(T12-mean(T12))^2/(n*sx_2))
t*sqrt(sigma_2) * sqrt(1+(1/n)+(X-mean(X))^2/(n*sx_2))
sx_2 = (var(X))^2
interv = t*sqrt(sigma_2) * sqrt(1+(1/n)+(X-mean(X))^2/(n*sx_2))
interv = t*sqrt(sigma_2) * sqrt(1+(1/n)+(X-mean(X))^2/(n*sx_2))
borneInf = beta_0barre + beta_1barre*X - interv
borneSup = beta_0barre + beta_1barre*X + interv
plot(X,T)
plot(X,Y)
curve(beta_0+beta_1*x -student*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(T12))^2/(n*sx_2)), from=min(T12), to=max(T12), col="red", add=TRUE)
curve(beta_0+beta_1*x -student*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
curve(beta_0barre+beta_1barre*x -student*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
curve(beta_0barre+beta_1barre*x -t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
par(new=T)
plot(X,Y)
curve(beta_0barre+beta_1barre*x -t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
n = length(Y)
alpha = 0.05
t = qt(1-alpha/2, n-2)
sigma_2 = sum((Y-beta0_manuel - beta1_manuel*X)^2)/(n-2)
sx_2 = (var(X))^2
interv = t*sqrt(sigma_2) * sqrt(1+(1/n)+(X-mean(X))^2/(n*sx_2))
borneInf = beta_0barre + beta_1barre*X - interv
borneSup = beta_0barre + beta_1barre*X + interv
par(new=T)
plot(X,Y)
curve(beta_0barre+beta_1barre*x -t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
curve((borneSup), from=min(X), to=max(X), col="red", add=TRUE)
n = length(Y)
alpha = 0.05
t = qt(1-alpha/2, n-2)
sigma_2 = sum((Y-beta0_manuel - beta1_manuel*X)^2)/(n-2)
sx_2 = (var(X))^2
interv = t*sqrt(sigma_2) * sqrt(1+(1/n)+(X-mean(X))^2/(n*sx_2))
borneInf = beta_0barre + beta_1barre*X - interv
borneSup = beta_0barre + beta_1barre*X + interv
par(new=T)
plot(X,Y)
curve(borneInf), from=min(X), to=max(X), col="red", add=TRUE)
curve(borneInf, from=min(X), to=max(X), col="red", add=TRUE)
n = length(Y)
alpha = 0.05
t = qt(1-alpha/2, n-2)
sigma_2 = sum((Y-beta0_manuel - beta1_manuel*X)^2)/(n-2)
sx_2 = (var(X))^2
interv = t*sqrt(sigma_2) * sqrt(1+(1/n)+(X-mean(X))^2/(n*sx_2))
borneInf = beta_0barre + beta_1barre*X - interv
borneSup = beta_0barre + beta_1barre*X + interv
par(new=T)
plot(X,Y)
curve(beta_0barre+beta_1barre*x -t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
curve(beta_0barre+beta_1barre*x +t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
n = length(Y)
alpha = 0.05
t = qt(1-alpha/2, n-2)
sigma_2 = sum((Y-beta0_manuel - beta1_manuel*X)^2)/(n-2)
sx_2 = (var(X))^2
interv = t*sqrt(sigma_2) * sqrt(1+(1/n)+(X-mean(X))^2/(n*sx_2))
borneInf = beta_0barre + beta_1barre*X - interv
borneSup = beta_0barre + beta_1barre*X + interv
plot(X,Y)
curve(beta_0barre+beta_1barre*x -t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
curve(beta_0barre+beta_1barre*x +t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
curve(beta_0barre+beta_1barre*X +t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
n = length(Y)
alpha = 0.05
t = qt(1-alpha/2, n-2)
sigma_2 = sum((Y-beta0_manuel - beta1_manuel*X)^2)/(n-2)
sx_2 = (var(X))^2
interv = t*sqrt(sigma_2) * sqrt(1+(1/n)+(X-mean(X))^2/(n*sx_2))
borneInf = beta_0barre + beta_1barre*X - interv
borneSup = beta_0barre + beta_1barre*X + interv
plot(X,Y)
curve(beta_0barre+beta_1barre*X -t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
n = length(Y)
alpha = 0.05
t = qt(1-alpha/2, n-2)
sigma_2 = sum((Y-beta0_manuel - beta1_manuel*X)^2)/(n-2)
sx_2 = (var(X))^2
interv = t*sqrt(sigma_2) * sqrt(1+(1/n)+(X-mean(X))^2/(n*sx_2))
borneInf = beta_0barre + beta_1barre*X - interv
borneSup = beta_0barre + beta_1barre*X + interv
plot(X,Y)
curve(beta_0barre+beta_1barre*x -t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
curve(beta_0barre+beta_1barre*x +t*sqrt(sigma_2) * sqrt(1+(1/n)+(x-mean(X))^2/(n*sx_2)), from=min(X), to=max(X), col="red", add=TRUE)
